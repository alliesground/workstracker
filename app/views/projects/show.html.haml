:javascript
  $(function() {
    /* Add list form */
    $('#btn_add_list').on('click', function() {
      $('.modal#add-list-form').modal('show');
    });

    /* Invite form */
    $('#btn-invite').on('click', function() {
      $('.modal#invite-form').modal('show');
    });

    var $formFieldWithError = $('form').find('.field.error');
    if( $formFieldWithError.length > 0 ) {
      $formFieldWithError.closest('.modal').modal('show');
    }

    /* Masonry */
    function resizeGridItem(item){
      grid = document.getElementById("masonry-grid");
      rowHeight = parseInt(window.getComputedStyle(grid).getPropertyValue('grid-auto-rows'));
      rowGap = parseInt(window.getComputedStyle(grid).getPropertyValue('grid-row-gap'));
      rowSpan = Math.ceil((item.querySelector('.content').getBoundingClientRect().height+rowGap)/(rowHeight+rowGap));
      item.style.gridRowEnd = "span "+rowSpan;
    }

    function resizeAllGridItems(){
      allItems = $('#masonry-grid .item');
      for(x=0;x<allItems.length;x++){
        resizeGridItem(allItems[x]);
      }
    }

    function resizeInstance(instance){
      item = instance.elements[0];
      resizeGridItem(item);
    }

    window.onload = resizeAllGridItems();
    window.addEventListener("resize", resizeAllGridItems);

    /*
    allItems = document.getElementsByClassName("item");
    for(x=0;x<allItems.length;x++){
      imagesLoaded( allItems[x], resizeInstance);
    }*/

  });


= javascript_pack_tag 'tasks'

.sixteen.wide.column
  #masonry-grid
    .item
      .ui.card
        .content
          .header
            card1
    .item
      .ui.card
        .content
          .header
            card2
            %br
            card2
            %br
            card2
            %br
            card2
    .item
      .ui.card
        .content
          .header
            card3
    .item
      .ui.card
        .content
          .header
            card4
    .item
      .ui.card
        .content
          .header
            card5
    .item
      .ui.card
        .content
          .header
            card6


.sixteen.wide.column 
  .ui.horizontal.divided.list
    .item
      %h3= project.title
    .item
      .ui.horizontal.list
        = render partial: 'projects/member', collection: project.members
        .item
          .tiny.ui.button#btn-invite Invite

.sixteen.wide.column
  .ui.button#btn_add_list
    Add list

.sixteen.wide.column
  .ui.four.cards
    = render project.lists.persisted

.sixteen.wide.column#task-list

-# Modal for invite form
= render "#{(invite ||= project.invites.new).to_partial_path}_form", invite: invite

-# Modal for list form
.ui.mini.modal#add-list-form
  .header
    Add List
  .content
    = simple_form_for [project, list ||= project.lists.new], class: 'ui form' do |f|
      .field
        = f.input :title
      %button{type:"submit", class: "ui green ok inverted button"}
        Submit
